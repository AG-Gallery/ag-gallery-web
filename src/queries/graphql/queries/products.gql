fragment ProductImageFields on Image {
  id
  url
  altText
  width
  height
}

fragment ProductFields on Product {
  id
  title
  handle
  createdAt
  descriptionHtml
  images(first: $imagesFirst) {
    edges {
      node {
        ...ProductImageFields
      }
    }
  }
  priceRange {
    maxVariantPrice {
      amount
      currencyCode
    }
  }
  artist: metafield(namespace: "custom", key: "artist") {
    value
    type
  }
  category: metafield(namespace: "custom", key: "category") {
    value
    type
  }
  dimensionsImperial: metafield(namespace: "custom", key: "dimensions_us") {
    value
    type
  }
  dimensionsMetric: metafield(namespace: "custom", key: "dimensions_global") {
    value
    type
  }
  medium: metafield(namespace: "custom", key: "medium") {
    value
    type
  }
  style: metafield(namespace: "shopify", key: "art-movement") {
    references(first: 4) {
      nodes {
        __typename
        ...LabeledMetaobject
      }
    }
  }
  theme: metafield(namespace: "shopify", key: "theme") {
    references(first: 4) {
      nodes {
        __typename
        ...LabeledMetaobject
      }
    }
  }
}

query Public_GetAllProducts(
  $first: Int = 24
  $after: String
  $imagesFirst: Int = 1
) {
  products(first: $first, after: $after) {
    pageInfo {
      hasNextPage
      endCursor
    }
    edges {
      cursor
      node {
        ...ProductFields
      }
    }
  }
}

query Public_GetRecentProducts(
  $first: Int = 6
  $sortKey: ProductSortKeys = CREATED_AT
  $reverse: Boolean = true
  $imagesFirst: Int = 1
  $metafieldNamespace: String = "custom"
  $artistKey: String = "artist"
  $categoryKey: String = "category"
  $dimensionsKey: String = "dimensions"
) {
  products(first: $first, sortKey: $sortKey, reverse: $reverse) {
    edges {
      cursor
      node {
        ...ProductFields
      }
    }
  }
}

query Public_GetCollectionProducts(
  $collectionHandle: String!
  $productsFirst: Int = 12
  $productsAfter: String
  $imagesFirst: Int = 1
  $metafieldNamespace: String = "custom"
  $artistKey: String = "artist"
  $categoryKey: String = "category"
  $dimensionsKey: String = "dimensions"
) {
  collectionByHandle(handle: $collectionHandle) {
    products(first: $productsFirst, after: $productsAfter) {
      pageInfo {
        hasNextPage
        endCursor
      }
      edges {
        cursor
        node {
          ...ProductFields
        }
      }
    }
  }
}

query Public_GetProduct(
  $id: ID!
  $imagesFirst: Int = 6
  $metafieldNamespace: String = "custom"
  $artistKey: String = "artist"
  $categoryKey: String = "category"
  $dimensionsKey: String = "dimensions"
) {
  product(id: $id) {
    ...ProductFields
  }
}

query GetProductsForCheckout($ids: [ID!]!) {
  products: nodes(ids: $ids) {
    __typename
    ... on Product {
      id
      handle
      title
      availableForSale
      variants(first: 1) {
        edges {
          node {
            id
            availableForSale
            quantityAvailable
            price {
              amount
              currencyCode
            }
          }
        }
      }
    }
  }
}
