/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'
import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MagazinePathlessLayoutRouteRouteImport } from './routes/magazine/_pathlessLayout/route'
import { Route as EventsPathlessLayoutRouteRouteImport } from './routes/events/_pathlessLayout/route'
import { Route as ArtworksPathlessLayoutRouteRouteImport } from './routes/artworks/_pathlessLayout/route'
import { Route as ArtistsPathlessLayoutRouteRouteImport } from './routes/artists/_pathlessLayout/route'
import { Route as AboutPathlessLayoutRouteRouteImport } from './routes/about/_pathlessLayout/route'
import { Route as MagazinePathlessLayoutIndexRouteImport } from './routes/magazine/_pathlessLayout/index'
import { Route as EventsPathlessLayoutIndexRouteImport } from './routes/events/_pathlessLayout/index'
import { Route as ArtworksPathlessLayoutIndexRouteImport } from './routes/artworks/_pathlessLayout/index'
import { Route as ArtistsPathlessLayoutIndexRouteImport } from './routes/artists/_pathlessLayout/index'
import { Route as AboutPathlessLayoutIndexRouteImport } from './routes/about/_pathlessLayout/index'
import { Route as ArtworksPathlessLayoutSlugIndexRouteImport } from './routes/artworks/_pathlessLayout/$slug.index'
import { Route as ArtistsPathlessLayoutSlugIndexRouteImport } from './routes/artists/_pathlessLayout/$slug/index'
import { Route as EventsPathlessLayoutFairsSlugIndexRouteImport } from './routes/events/_pathlessLayout/fairs/$slug.index'
import { Route as EventsPathlessLayoutExhibitionsSlugIndexRouteImport } from './routes/events/_pathlessLayout/exhibitions/$slug.index'
import { Route as ArtistsPathlessLayoutSlugArtworksIndexRouteImport } from './routes/artists/_pathlessLayout/$slug/artworks.index'
import { ServerRoute as ApiShopifyGraphqlServerRouteImport } from './routes/api/shopify/graphql'

const MagazineRouteImport = createFileRoute('/magazine')()
const EventsRouteImport = createFileRoute('/events')()
const ArtworksRouteImport = createFileRoute('/artworks')()
const ArtistsRouteImport = createFileRoute('/artists')()
const rootServerRouteImport = createServerRootRoute()

const MagazineRoute = MagazineRouteImport.update({
  id: '/magazine',
  path: '/magazine',
  getParentRoute: () => rootRouteImport,
} as any)
const EventsRoute = EventsRouteImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => rootRouteImport,
} as any)
const ArtworksRoute = ArtworksRouteImport.update({
  id: '/artworks',
  path: '/artworks',
  getParentRoute: () => rootRouteImport,
} as any)
const ArtistsRoute = ArtistsRouteImport.update({
  id: '/artists',
  path: '/artists',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MagazinePathlessLayoutRouteRoute =
  MagazinePathlessLayoutRouteRouteImport.update({
    id: '/_pathlessLayout',
    getParentRoute: () => MagazineRoute,
  } as any)
const EventsPathlessLayoutRouteRoute =
  EventsPathlessLayoutRouteRouteImport.update({
    id: '/_pathlessLayout',
    getParentRoute: () => EventsRoute,
  } as any)
const ArtworksPathlessLayoutRouteRoute =
  ArtworksPathlessLayoutRouteRouteImport.update({
    id: '/_pathlessLayout',
    getParentRoute: () => ArtworksRoute,
  } as any)
const ArtistsPathlessLayoutRouteRoute =
  ArtistsPathlessLayoutRouteRouteImport.update({
    id: '/_pathlessLayout',
    getParentRoute: () => ArtistsRoute,
  } as any)
const AboutPathlessLayoutRouteRoute =
  AboutPathlessLayoutRouteRouteImport.update({
    id: '/_pathlessLayout',
    getParentRoute: () => AboutRoute,
  } as any)
const MagazinePathlessLayoutIndexRoute =
  MagazinePathlessLayoutIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => MagazinePathlessLayoutRouteRoute,
  } as any)
const EventsPathlessLayoutIndexRoute =
  EventsPathlessLayoutIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => EventsPathlessLayoutRouteRoute,
  } as any)
const ArtworksPathlessLayoutIndexRoute =
  ArtworksPathlessLayoutIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ArtworksPathlessLayoutRouteRoute,
  } as any)
const ArtistsPathlessLayoutIndexRoute =
  ArtistsPathlessLayoutIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ArtistsPathlessLayoutRouteRoute,
  } as any)
const AboutPathlessLayoutIndexRoute =
  AboutPathlessLayoutIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AboutPathlessLayoutRouteRoute,
  } as any)
const ArtworksPathlessLayoutSlugIndexRoute =
  ArtworksPathlessLayoutSlugIndexRouteImport.update({
    id: '/$slug/',
    path: '/$slug/',
    getParentRoute: () => ArtworksPathlessLayoutRouteRoute,
  } as any)
const ArtistsPathlessLayoutSlugIndexRoute =
  ArtistsPathlessLayoutSlugIndexRouteImport.update({
    id: '/$slug/',
    path: '/$slug/',
    getParentRoute: () => ArtistsPathlessLayoutRouteRoute,
  } as any)
const EventsPathlessLayoutFairsSlugIndexRoute =
  EventsPathlessLayoutFairsSlugIndexRouteImport.update({
    id: '/fairs/$slug/',
    path: '/fairs/$slug/',
    getParentRoute: () => EventsPathlessLayoutRouteRoute,
  } as any)
const EventsPathlessLayoutExhibitionsSlugIndexRoute =
  EventsPathlessLayoutExhibitionsSlugIndexRouteImport.update({
    id: '/exhibitions/$slug/',
    path: '/exhibitions/$slug/',
    getParentRoute: () => EventsPathlessLayoutRouteRoute,
  } as any)
const ArtistsPathlessLayoutSlugArtworksIndexRoute =
  ArtistsPathlessLayoutSlugArtworksIndexRouteImport.update({
    id: '/$slug/artworks/',
    path: '/$slug/artworks/',
    getParentRoute: () => ArtistsPathlessLayoutRouteRoute,
  } as any)
const ApiShopifyGraphqlServerRoute = ApiShopifyGraphqlServerRouteImport.update({
  id: '/api/shopify/graphql',
  path: '/api/shopify/graphql',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutPathlessLayoutRouteRouteWithChildren
  '/artists': typeof ArtistsPathlessLayoutRouteRouteWithChildren
  '/artworks': typeof ArtworksPathlessLayoutRouteRouteWithChildren
  '/events': typeof EventsPathlessLayoutRouteRouteWithChildren
  '/magazine': typeof MagazinePathlessLayoutRouteRouteWithChildren
  '/about/': typeof AboutPathlessLayoutIndexRoute
  '/artists/': typeof ArtistsPathlessLayoutIndexRoute
  '/artworks/': typeof ArtworksPathlessLayoutIndexRoute
  '/events/': typeof EventsPathlessLayoutIndexRoute
  '/magazine/': typeof MagazinePathlessLayoutIndexRoute
  '/artists/$slug': typeof ArtistsPathlessLayoutSlugIndexRoute
  '/artworks/$slug': typeof ArtworksPathlessLayoutSlugIndexRoute
  '/artists/$slug/artworks': typeof ArtistsPathlessLayoutSlugArtworksIndexRoute
  '/events/exhibitions/$slug': typeof EventsPathlessLayoutExhibitionsSlugIndexRoute
  '/events/fairs/$slug': typeof EventsPathlessLayoutFairsSlugIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutPathlessLayoutIndexRoute
  '/artists': typeof ArtistsPathlessLayoutIndexRoute
  '/artworks': typeof ArtworksPathlessLayoutIndexRoute
  '/events': typeof EventsPathlessLayoutIndexRoute
  '/magazine': typeof MagazinePathlessLayoutIndexRoute
  '/artists/$slug': typeof ArtistsPathlessLayoutSlugIndexRoute
  '/artworks/$slug': typeof ArtworksPathlessLayoutSlugIndexRoute
  '/artists/$slug/artworks': typeof ArtistsPathlessLayoutSlugArtworksIndexRoute
  '/events/exhibitions/$slug': typeof EventsPathlessLayoutExhibitionsSlugIndexRoute
  '/events/fairs/$slug': typeof EventsPathlessLayoutFairsSlugIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRouteWithChildren
  '/about/_pathlessLayout': typeof AboutPathlessLayoutRouteRouteWithChildren
  '/artists': typeof ArtistsRouteWithChildren
  '/artists/_pathlessLayout': typeof ArtistsPathlessLayoutRouteRouteWithChildren
  '/artworks': typeof ArtworksRouteWithChildren
  '/artworks/_pathlessLayout': typeof ArtworksPathlessLayoutRouteRouteWithChildren
  '/events': typeof EventsRouteWithChildren
  '/events/_pathlessLayout': typeof EventsPathlessLayoutRouteRouteWithChildren
  '/magazine': typeof MagazineRouteWithChildren
  '/magazine/_pathlessLayout': typeof MagazinePathlessLayoutRouteRouteWithChildren
  '/about/_pathlessLayout/': typeof AboutPathlessLayoutIndexRoute
  '/artists/_pathlessLayout/': typeof ArtistsPathlessLayoutIndexRoute
  '/artworks/_pathlessLayout/': typeof ArtworksPathlessLayoutIndexRoute
  '/events/_pathlessLayout/': typeof EventsPathlessLayoutIndexRoute
  '/magazine/_pathlessLayout/': typeof MagazinePathlessLayoutIndexRoute
  '/artists/_pathlessLayout/$slug/': typeof ArtistsPathlessLayoutSlugIndexRoute
  '/artworks/_pathlessLayout/$slug/': typeof ArtworksPathlessLayoutSlugIndexRoute
  '/artists/_pathlessLayout/$slug/artworks/': typeof ArtistsPathlessLayoutSlugArtworksIndexRoute
  '/events/_pathlessLayout/exhibitions/$slug/': typeof EventsPathlessLayoutExhibitionsSlugIndexRoute
  '/events/_pathlessLayout/fairs/$slug/': typeof EventsPathlessLayoutFairsSlugIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/artists'
    | '/artworks'
    | '/events'
    | '/magazine'
    | '/about/'
    | '/artists/'
    | '/artworks/'
    | '/events/'
    | '/magazine/'
    | '/artists/$slug'
    | '/artworks/$slug'
    | '/artists/$slug/artworks'
    | '/events/exhibitions/$slug'
    | '/events/fairs/$slug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/artists'
    | '/artworks'
    | '/events'
    | '/magazine'
    | '/artists/$slug'
    | '/artworks/$slug'
    | '/artists/$slug/artworks'
    | '/events/exhibitions/$slug'
    | '/events/fairs/$slug'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/about/_pathlessLayout'
    | '/artists'
    | '/artists/_pathlessLayout'
    | '/artworks'
    | '/artworks/_pathlessLayout'
    | '/events'
    | '/events/_pathlessLayout'
    | '/magazine'
    | '/magazine/_pathlessLayout'
    | '/about/_pathlessLayout/'
    | '/artists/_pathlessLayout/'
    | '/artworks/_pathlessLayout/'
    | '/events/_pathlessLayout/'
    | '/magazine/_pathlessLayout/'
    | '/artists/_pathlessLayout/$slug/'
    | '/artworks/_pathlessLayout/$slug/'
    | '/artists/_pathlessLayout/$slug/artworks/'
    | '/events/_pathlessLayout/exhibitions/$slug/'
    | '/events/_pathlessLayout/fairs/$slug/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRouteWithChildren
  ArtistsRoute: typeof ArtistsRouteWithChildren
  ArtworksRoute: typeof ArtworksRouteWithChildren
  EventsRoute: typeof EventsRouteWithChildren
  MagazineRoute: typeof MagazineRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/shopify/graphql': typeof ApiShopifyGraphqlServerRoute
}
export interface FileServerRoutesByTo {
  '/api/shopify/graphql': typeof ApiShopifyGraphqlServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/shopify/graphql': typeof ApiShopifyGraphqlServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/shopify/graphql'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/shopify/graphql'
  id: '__root__' | '/api/shopify/graphql'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiShopifyGraphqlServerRoute: typeof ApiShopifyGraphqlServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/magazine': {
      id: '/magazine'
      path: '/magazine'
      fullPath: '/magazine'
      preLoaderRoute: typeof MagazineRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/events': {
      id: '/events'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/artworks': {
      id: '/artworks'
      path: '/artworks'
      fullPath: '/artworks'
      preLoaderRoute: typeof ArtworksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/artists': {
      id: '/artists'
      path: '/artists'
      fullPath: '/artists'
      preLoaderRoute: typeof ArtistsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/magazine/_pathlessLayout': {
      id: '/magazine/_pathlessLayout'
      path: '/magazine'
      fullPath: '/magazine'
      preLoaderRoute: typeof MagazinePathlessLayoutRouteRouteImport
      parentRoute: typeof MagazineRoute
    }
    '/events/_pathlessLayout': {
      id: '/events/_pathlessLayout'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsPathlessLayoutRouteRouteImport
      parentRoute: typeof EventsRoute
    }
    '/artworks/_pathlessLayout': {
      id: '/artworks/_pathlessLayout'
      path: '/artworks'
      fullPath: '/artworks'
      preLoaderRoute: typeof ArtworksPathlessLayoutRouteRouteImport
      parentRoute: typeof ArtworksRoute
    }
    '/artists/_pathlessLayout': {
      id: '/artists/_pathlessLayout'
      path: '/artists'
      fullPath: '/artists'
      preLoaderRoute: typeof ArtistsPathlessLayoutRouteRouteImport
      parentRoute: typeof ArtistsRoute
    }
    '/about/_pathlessLayout': {
      id: '/about/_pathlessLayout'
      path: ''
      fullPath: '/about'
      preLoaderRoute: typeof AboutPathlessLayoutRouteRouteImport
      parentRoute: typeof AboutRoute
    }
    '/magazine/_pathlessLayout/': {
      id: '/magazine/_pathlessLayout/'
      path: '/'
      fullPath: '/magazine/'
      preLoaderRoute: typeof MagazinePathlessLayoutIndexRouteImport
      parentRoute: typeof MagazinePathlessLayoutRouteRoute
    }
    '/events/_pathlessLayout/': {
      id: '/events/_pathlessLayout/'
      path: '/'
      fullPath: '/events/'
      preLoaderRoute: typeof EventsPathlessLayoutIndexRouteImport
      parentRoute: typeof EventsPathlessLayoutRouteRoute
    }
    '/artworks/_pathlessLayout/': {
      id: '/artworks/_pathlessLayout/'
      path: '/'
      fullPath: '/artworks/'
      preLoaderRoute: typeof ArtworksPathlessLayoutIndexRouteImport
      parentRoute: typeof ArtworksPathlessLayoutRouteRoute
    }
    '/artists/_pathlessLayout/': {
      id: '/artists/_pathlessLayout/'
      path: '/'
      fullPath: '/artists/'
      preLoaderRoute: typeof ArtistsPathlessLayoutIndexRouteImport
      parentRoute: typeof ArtistsPathlessLayoutRouteRoute
    }
    '/about/_pathlessLayout/': {
      id: '/about/_pathlessLayout/'
      path: '/'
      fullPath: '/about/'
      preLoaderRoute: typeof AboutPathlessLayoutIndexRouteImport
      parentRoute: typeof AboutPathlessLayoutRouteRoute
    }
    '/artworks/_pathlessLayout/$slug/': {
      id: '/artworks/_pathlessLayout/$slug/'
      path: '/$slug'
      fullPath: '/artworks/$slug'
      preLoaderRoute: typeof ArtworksPathlessLayoutSlugIndexRouteImport
      parentRoute: typeof ArtworksPathlessLayoutRouteRoute
    }
    '/artists/_pathlessLayout/$slug/': {
      id: '/artists/_pathlessLayout/$slug/'
      path: '/$slug'
      fullPath: '/artists/$slug'
      preLoaderRoute: typeof ArtistsPathlessLayoutSlugIndexRouteImport
      parentRoute: typeof ArtistsPathlessLayoutRouteRoute
    }
    '/events/_pathlessLayout/fairs/$slug/': {
      id: '/events/_pathlessLayout/fairs/$slug/'
      path: '/fairs/$slug'
      fullPath: '/events/fairs/$slug'
      preLoaderRoute: typeof EventsPathlessLayoutFairsSlugIndexRouteImport
      parentRoute: typeof EventsPathlessLayoutRouteRoute
    }
    '/events/_pathlessLayout/exhibitions/$slug/': {
      id: '/events/_pathlessLayout/exhibitions/$slug/'
      path: '/exhibitions/$slug'
      fullPath: '/events/exhibitions/$slug'
      preLoaderRoute: typeof EventsPathlessLayoutExhibitionsSlugIndexRouteImport
      parentRoute: typeof EventsPathlessLayoutRouteRoute
    }
    '/artists/_pathlessLayout/$slug/artworks/': {
      id: '/artists/_pathlessLayout/$slug/artworks/'
      path: '/$slug/artworks'
      fullPath: '/artists/$slug/artworks'
      preLoaderRoute: typeof ArtistsPathlessLayoutSlugArtworksIndexRouteImport
      parentRoute: typeof ArtistsPathlessLayoutRouteRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/shopify/graphql': {
      id: '/api/shopify/graphql'
      path: '/api/shopify/graphql'
      fullPath: '/api/shopify/graphql'
      preLoaderRoute: typeof ApiShopifyGraphqlServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AboutPathlessLayoutRouteRouteChildren {
  AboutPathlessLayoutIndexRoute: typeof AboutPathlessLayoutIndexRoute
}

const AboutPathlessLayoutRouteRouteChildren: AboutPathlessLayoutRouteRouteChildren =
  {
    AboutPathlessLayoutIndexRoute: AboutPathlessLayoutIndexRoute,
  }

const AboutPathlessLayoutRouteRouteWithChildren =
  AboutPathlessLayoutRouteRoute._addFileChildren(
    AboutPathlessLayoutRouteRouteChildren,
  )

interface AboutRouteChildren {
  AboutPathlessLayoutRouteRoute: typeof AboutPathlessLayoutRouteRouteWithChildren
}

const AboutRouteChildren: AboutRouteChildren = {
  AboutPathlessLayoutRouteRoute: AboutPathlessLayoutRouteRouteWithChildren,
}

const AboutRouteWithChildren = AboutRoute._addFileChildren(AboutRouteChildren)

interface ArtistsPathlessLayoutRouteRouteChildren {
  ArtistsPathlessLayoutIndexRoute: typeof ArtistsPathlessLayoutIndexRoute
  ArtistsPathlessLayoutSlugIndexRoute: typeof ArtistsPathlessLayoutSlugIndexRoute
  ArtistsPathlessLayoutSlugArtworksIndexRoute: typeof ArtistsPathlessLayoutSlugArtworksIndexRoute
}

const ArtistsPathlessLayoutRouteRouteChildren: ArtistsPathlessLayoutRouteRouteChildren =
  {
    ArtistsPathlessLayoutIndexRoute: ArtistsPathlessLayoutIndexRoute,
    ArtistsPathlessLayoutSlugIndexRoute: ArtistsPathlessLayoutSlugIndexRoute,
    ArtistsPathlessLayoutSlugArtworksIndexRoute:
      ArtistsPathlessLayoutSlugArtworksIndexRoute,
  }

const ArtistsPathlessLayoutRouteRouteWithChildren =
  ArtistsPathlessLayoutRouteRoute._addFileChildren(
    ArtistsPathlessLayoutRouteRouteChildren,
  )

interface ArtistsRouteChildren {
  ArtistsPathlessLayoutRouteRoute: typeof ArtistsPathlessLayoutRouteRouteWithChildren
}

const ArtistsRouteChildren: ArtistsRouteChildren = {
  ArtistsPathlessLayoutRouteRoute: ArtistsPathlessLayoutRouteRouteWithChildren,
}

const ArtistsRouteWithChildren =
  ArtistsRoute._addFileChildren(ArtistsRouteChildren)

interface ArtworksPathlessLayoutRouteRouteChildren {
  ArtworksPathlessLayoutIndexRoute: typeof ArtworksPathlessLayoutIndexRoute
  ArtworksPathlessLayoutSlugIndexRoute: typeof ArtworksPathlessLayoutSlugIndexRoute
}

const ArtworksPathlessLayoutRouteRouteChildren: ArtworksPathlessLayoutRouteRouteChildren =
  {
    ArtworksPathlessLayoutIndexRoute: ArtworksPathlessLayoutIndexRoute,
    ArtworksPathlessLayoutSlugIndexRoute: ArtworksPathlessLayoutSlugIndexRoute,
  }

const ArtworksPathlessLayoutRouteRouteWithChildren =
  ArtworksPathlessLayoutRouteRoute._addFileChildren(
    ArtworksPathlessLayoutRouteRouteChildren,
  )

interface ArtworksRouteChildren {
  ArtworksPathlessLayoutRouteRoute: typeof ArtworksPathlessLayoutRouteRouteWithChildren
}

const ArtworksRouteChildren: ArtworksRouteChildren = {
  ArtworksPathlessLayoutRouteRoute:
    ArtworksPathlessLayoutRouteRouteWithChildren,
}

const ArtworksRouteWithChildren = ArtworksRoute._addFileChildren(
  ArtworksRouteChildren,
)

interface EventsPathlessLayoutRouteRouteChildren {
  EventsPathlessLayoutIndexRoute: typeof EventsPathlessLayoutIndexRoute
  EventsPathlessLayoutExhibitionsSlugIndexRoute: typeof EventsPathlessLayoutExhibitionsSlugIndexRoute
  EventsPathlessLayoutFairsSlugIndexRoute: typeof EventsPathlessLayoutFairsSlugIndexRoute
}

const EventsPathlessLayoutRouteRouteChildren: EventsPathlessLayoutRouteRouteChildren =
  {
    EventsPathlessLayoutIndexRoute: EventsPathlessLayoutIndexRoute,
    EventsPathlessLayoutExhibitionsSlugIndexRoute:
      EventsPathlessLayoutExhibitionsSlugIndexRoute,
    EventsPathlessLayoutFairsSlugIndexRoute:
      EventsPathlessLayoutFairsSlugIndexRoute,
  }

const EventsPathlessLayoutRouteRouteWithChildren =
  EventsPathlessLayoutRouteRoute._addFileChildren(
    EventsPathlessLayoutRouteRouteChildren,
  )

interface EventsRouteChildren {
  EventsPathlessLayoutRouteRoute: typeof EventsPathlessLayoutRouteRouteWithChildren
}

const EventsRouteChildren: EventsRouteChildren = {
  EventsPathlessLayoutRouteRoute: EventsPathlessLayoutRouteRouteWithChildren,
}

const EventsRouteWithChildren =
  EventsRoute._addFileChildren(EventsRouteChildren)

interface MagazinePathlessLayoutRouteRouteChildren {
  MagazinePathlessLayoutIndexRoute: typeof MagazinePathlessLayoutIndexRoute
}

const MagazinePathlessLayoutRouteRouteChildren: MagazinePathlessLayoutRouteRouteChildren =
  {
    MagazinePathlessLayoutIndexRoute: MagazinePathlessLayoutIndexRoute,
  }

const MagazinePathlessLayoutRouteRouteWithChildren =
  MagazinePathlessLayoutRouteRoute._addFileChildren(
    MagazinePathlessLayoutRouteRouteChildren,
  )

interface MagazineRouteChildren {
  MagazinePathlessLayoutRouteRoute: typeof MagazinePathlessLayoutRouteRouteWithChildren
}

const MagazineRouteChildren: MagazineRouteChildren = {
  MagazinePathlessLayoutRouteRoute:
    MagazinePathlessLayoutRouteRouteWithChildren,
}

const MagazineRouteWithChildren = MagazineRoute._addFileChildren(
  MagazineRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRouteWithChildren,
  ArtistsRoute: ArtistsRouteWithChildren,
  ArtworksRoute: ArtworksRouteWithChildren,
  EventsRoute: EventsRouteWithChildren,
  MagazineRoute: MagazineRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiShopifyGraphqlServerRoute: ApiShopifyGraphqlServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
