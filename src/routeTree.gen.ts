/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'
import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as EventsLayoutRouteImport } from './routes/events/_layout'
import { Route as ArtworksLayoutRouteImport } from './routes/artworks/_layout'
import { Route as ArtistsLayoutRouteImport } from './routes/artists/_layout'
import { Route as EventsLayoutIndexRouteImport } from './routes/events/_layout.index'
import { Route as ArtworksLayoutIndexRouteImport } from './routes/artworks/_layout.index'
import { Route as ArtistsLayoutIndexRouteImport } from './routes/artists/_layout.index'
import { Route as EventsLayoutSlugIndexRouteImport } from './routes/events/_layout.$slug.index'
import { Route as ArtworksLayoutSlugIndexRouteImport } from './routes/artworks/_layout.$slug.index'
import { Route as ArtistsLayoutSlugIndexRouteImport } from './routes/artists/_layout.$slug.index'
import { Route as ArtistsLayoutSlugArtworksPageRouteImport } from './routes/artists/_layout.$slug.artworks.$page'
import { ServerRoute as ApiShopifyGraphqlServerRouteImport } from './routes/api/shopify/graphql'

const EventsRouteImport = createFileRoute('/events')()
const ArtworksRouteImport = createFileRoute('/artworks')()
const ArtistsRouteImport = createFileRoute('/artists')()
const rootServerRouteImport = createServerRootRoute()

const EventsRoute = EventsRouteImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => rootRouteImport,
} as any)
const ArtworksRoute = ArtworksRouteImport.update({
  id: '/artworks',
  path: '/artworks',
  getParentRoute: () => rootRouteImport,
} as any)
const ArtistsRoute = ArtistsRouteImport.update({
  id: '/artists',
  path: '/artists',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const EventsLayoutRoute = EventsLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => EventsRoute,
} as any)
const ArtworksLayoutRoute = ArtworksLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => ArtworksRoute,
} as any)
const ArtistsLayoutRoute = ArtistsLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => ArtistsRoute,
} as any)
const EventsLayoutIndexRoute = EventsLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => EventsLayoutRoute,
} as any)
const ArtworksLayoutIndexRoute = ArtworksLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ArtworksLayoutRoute,
} as any)
const ArtistsLayoutIndexRoute = ArtistsLayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ArtistsLayoutRoute,
} as any)
const EventsLayoutSlugIndexRoute = EventsLayoutSlugIndexRouteImport.update({
  id: '/$slug/',
  path: '/$slug/',
  getParentRoute: () => EventsLayoutRoute,
} as any)
const ArtworksLayoutSlugIndexRoute = ArtworksLayoutSlugIndexRouteImport.update({
  id: '/$slug/',
  path: '/$slug/',
  getParentRoute: () => ArtworksLayoutRoute,
} as any)
const ArtistsLayoutSlugIndexRoute = ArtistsLayoutSlugIndexRouteImport.update({
  id: '/$slug/',
  path: '/$slug/',
  getParentRoute: () => ArtistsLayoutRoute,
} as any)
const ArtistsLayoutSlugArtworksPageRoute =
  ArtistsLayoutSlugArtworksPageRouteImport.update({
    id: '/$slug/artworks/$page',
    path: '/$slug/artworks/$page',
    getParentRoute: () => ArtistsLayoutRoute,
  } as any)
const ApiShopifyGraphqlServerRoute = ApiShopifyGraphqlServerRouteImport.update({
  id: '/api/shopify/graphql',
  path: '/api/shopify/graphql',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/artists': typeof ArtistsLayoutRouteWithChildren
  '/artworks': typeof ArtworksLayoutRouteWithChildren
  '/events': typeof EventsLayoutRouteWithChildren
  '/artists/': typeof ArtistsLayoutIndexRoute
  '/artworks/': typeof ArtworksLayoutIndexRoute
  '/events/': typeof EventsLayoutIndexRoute
  '/artists/$slug': typeof ArtistsLayoutSlugIndexRoute
  '/artworks/$slug': typeof ArtworksLayoutSlugIndexRoute
  '/events/$slug': typeof EventsLayoutSlugIndexRoute
  '/artists/$slug/artworks/$page': typeof ArtistsLayoutSlugArtworksPageRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/artists': typeof ArtistsLayoutIndexRoute
  '/artworks': typeof ArtworksLayoutIndexRoute
  '/events': typeof EventsLayoutIndexRoute
  '/artists/$slug': typeof ArtistsLayoutSlugIndexRoute
  '/artworks/$slug': typeof ArtworksLayoutSlugIndexRoute
  '/events/$slug': typeof EventsLayoutSlugIndexRoute
  '/artists/$slug/artworks/$page': typeof ArtistsLayoutSlugArtworksPageRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/artists': typeof ArtistsRouteWithChildren
  '/artists/_layout': typeof ArtistsLayoutRouteWithChildren
  '/artworks': typeof ArtworksRouteWithChildren
  '/artworks/_layout': typeof ArtworksLayoutRouteWithChildren
  '/events': typeof EventsRouteWithChildren
  '/events/_layout': typeof EventsLayoutRouteWithChildren
  '/artists/_layout/': typeof ArtistsLayoutIndexRoute
  '/artworks/_layout/': typeof ArtworksLayoutIndexRoute
  '/events/_layout/': typeof EventsLayoutIndexRoute
  '/artists/_layout/$slug/': typeof ArtistsLayoutSlugIndexRoute
  '/artworks/_layout/$slug/': typeof ArtworksLayoutSlugIndexRoute
  '/events/_layout/$slug/': typeof EventsLayoutSlugIndexRoute
  '/artists/_layout/$slug/artworks/$page': typeof ArtistsLayoutSlugArtworksPageRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/artists'
    | '/artworks'
    | '/events'
    | '/artists/'
    | '/artworks/'
    | '/events/'
    | '/artists/$slug'
    | '/artworks/$slug'
    | '/events/$slug'
    | '/artists/$slug/artworks/$page'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/artists'
    | '/artworks'
    | '/events'
    | '/artists/$slug'
    | '/artworks/$slug'
    | '/events/$slug'
    | '/artists/$slug/artworks/$page'
  id:
    | '__root__'
    | '/'
    | '/artists'
    | '/artists/_layout'
    | '/artworks'
    | '/artworks/_layout'
    | '/events'
    | '/events/_layout'
    | '/artists/_layout/'
    | '/artworks/_layout/'
    | '/events/_layout/'
    | '/artists/_layout/$slug/'
    | '/artworks/_layout/$slug/'
    | '/events/_layout/$slug/'
    | '/artists/_layout/$slug/artworks/$page'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ArtistsRoute: typeof ArtistsRouteWithChildren
  ArtworksRoute: typeof ArtworksRouteWithChildren
  EventsRoute: typeof EventsRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/shopify/graphql': typeof ApiShopifyGraphqlServerRoute
}
export interface FileServerRoutesByTo {
  '/api/shopify/graphql': typeof ApiShopifyGraphqlServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/shopify/graphql': typeof ApiShopifyGraphqlServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/shopify/graphql'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/shopify/graphql'
  id: '__root__' | '/api/shopify/graphql'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiShopifyGraphqlServerRoute: typeof ApiShopifyGraphqlServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/events': {
      id: '/events'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/artworks': {
      id: '/artworks'
      path: '/artworks'
      fullPath: '/artworks'
      preLoaderRoute: typeof ArtworksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/artists': {
      id: '/artists'
      path: '/artists'
      fullPath: '/artists'
      preLoaderRoute: typeof ArtistsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/events/_layout': {
      id: '/events/_layout'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsLayoutRouteImport
      parentRoute: typeof EventsRoute
    }
    '/artworks/_layout': {
      id: '/artworks/_layout'
      path: '/artworks'
      fullPath: '/artworks'
      preLoaderRoute: typeof ArtworksLayoutRouteImport
      parentRoute: typeof ArtworksRoute
    }
    '/artists/_layout': {
      id: '/artists/_layout'
      path: '/artists'
      fullPath: '/artists'
      preLoaderRoute: typeof ArtistsLayoutRouteImport
      parentRoute: typeof ArtistsRoute
    }
    '/events/_layout/': {
      id: '/events/_layout/'
      path: '/'
      fullPath: '/events/'
      preLoaderRoute: typeof EventsLayoutIndexRouteImport
      parentRoute: typeof EventsLayoutRoute
    }
    '/artworks/_layout/': {
      id: '/artworks/_layout/'
      path: '/'
      fullPath: '/artworks/'
      preLoaderRoute: typeof ArtworksLayoutIndexRouteImport
      parentRoute: typeof ArtworksLayoutRoute
    }
    '/artists/_layout/': {
      id: '/artists/_layout/'
      path: '/'
      fullPath: '/artists/'
      preLoaderRoute: typeof ArtistsLayoutIndexRouteImport
      parentRoute: typeof ArtistsLayoutRoute
    }
    '/events/_layout/$slug/': {
      id: '/events/_layout/$slug/'
      path: '/$slug'
      fullPath: '/events/$slug'
      preLoaderRoute: typeof EventsLayoutSlugIndexRouteImport
      parentRoute: typeof EventsLayoutRoute
    }
    '/artworks/_layout/$slug/': {
      id: '/artworks/_layout/$slug/'
      path: '/$slug'
      fullPath: '/artworks/$slug'
      preLoaderRoute: typeof ArtworksLayoutSlugIndexRouteImport
      parentRoute: typeof ArtworksLayoutRoute
    }
    '/artists/_layout/$slug/': {
      id: '/artists/_layout/$slug/'
      path: '/$slug'
      fullPath: '/artists/$slug'
      preLoaderRoute: typeof ArtistsLayoutSlugIndexRouteImport
      parentRoute: typeof ArtistsLayoutRoute
    }
    '/artists/_layout/$slug/artworks/$page': {
      id: '/artists/_layout/$slug/artworks/$page'
      path: '/$slug/artworks/$page'
      fullPath: '/artists/$slug/artworks/$page'
      preLoaderRoute: typeof ArtistsLayoutSlugArtworksPageRouteImport
      parentRoute: typeof ArtistsLayoutRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/shopify/graphql': {
      id: '/api/shopify/graphql'
      path: '/api/shopify/graphql'
      fullPath: '/api/shopify/graphql'
      preLoaderRoute: typeof ApiShopifyGraphqlServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface ArtistsLayoutRouteChildren {
  ArtistsLayoutIndexRoute: typeof ArtistsLayoutIndexRoute
  ArtistsLayoutSlugIndexRoute: typeof ArtistsLayoutSlugIndexRoute
  ArtistsLayoutSlugArtworksPageRoute: typeof ArtistsLayoutSlugArtworksPageRoute
}

const ArtistsLayoutRouteChildren: ArtistsLayoutRouteChildren = {
  ArtistsLayoutIndexRoute: ArtistsLayoutIndexRoute,
  ArtistsLayoutSlugIndexRoute: ArtistsLayoutSlugIndexRoute,
  ArtistsLayoutSlugArtworksPageRoute: ArtistsLayoutSlugArtworksPageRoute,
}

const ArtistsLayoutRouteWithChildren = ArtistsLayoutRoute._addFileChildren(
  ArtistsLayoutRouteChildren,
)

interface ArtistsRouteChildren {
  ArtistsLayoutRoute: typeof ArtistsLayoutRouteWithChildren
}

const ArtistsRouteChildren: ArtistsRouteChildren = {
  ArtistsLayoutRoute: ArtistsLayoutRouteWithChildren,
}

const ArtistsRouteWithChildren =
  ArtistsRoute._addFileChildren(ArtistsRouteChildren)

interface ArtworksLayoutRouteChildren {
  ArtworksLayoutIndexRoute: typeof ArtworksLayoutIndexRoute
  ArtworksLayoutSlugIndexRoute: typeof ArtworksLayoutSlugIndexRoute
}

const ArtworksLayoutRouteChildren: ArtworksLayoutRouteChildren = {
  ArtworksLayoutIndexRoute: ArtworksLayoutIndexRoute,
  ArtworksLayoutSlugIndexRoute: ArtworksLayoutSlugIndexRoute,
}

const ArtworksLayoutRouteWithChildren = ArtworksLayoutRoute._addFileChildren(
  ArtworksLayoutRouteChildren,
)

interface ArtworksRouteChildren {
  ArtworksLayoutRoute: typeof ArtworksLayoutRouteWithChildren
}

const ArtworksRouteChildren: ArtworksRouteChildren = {
  ArtworksLayoutRoute: ArtworksLayoutRouteWithChildren,
}

const ArtworksRouteWithChildren = ArtworksRoute._addFileChildren(
  ArtworksRouteChildren,
)

interface EventsLayoutRouteChildren {
  EventsLayoutIndexRoute: typeof EventsLayoutIndexRoute
  EventsLayoutSlugIndexRoute: typeof EventsLayoutSlugIndexRoute
}

const EventsLayoutRouteChildren: EventsLayoutRouteChildren = {
  EventsLayoutIndexRoute: EventsLayoutIndexRoute,
  EventsLayoutSlugIndexRoute: EventsLayoutSlugIndexRoute,
}

const EventsLayoutRouteWithChildren = EventsLayoutRoute._addFileChildren(
  EventsLayoutRouteChildren,
)

interface EventsRouteChildren {
  EventsLayoutRoute: typeof EventsLayoutRouteWithChildren
}

const EventsRouteChildren: EventsRouteChildren = {
  EventsLayoutRoute: EventsLayoutRouteWithChildren,
}

const EventsRouteWithChildren =
  EventsRoute._addFileChildren(EventsRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ArtistsRoute: ArtistsRouteWithChildren,
  ArtworksRoute: ArtworksRouteWithChildren,
  EventsRoute: EventsRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiShopifyGraphqlServerRoute: ApiShopifyGraphqlServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
